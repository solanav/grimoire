(in-package :grimoire)

(defun read-git-header (stream)
  (let-bytes (stream)
             ((signature (:string (:bytes 4)))
              (version (:integer (:bytes 4)))
              (entries (:integer (:bytes 4))))
             (format t "[+] Signature:   ~a~%" signature)
             (format t "[+] Version:     ~a~%" version)
             (format t "[+] Entries:     ~a~%" entries)
             (assert (equal signature "DIRC"))
             (cons version entries)))

(defun read-git-entry (stream)
  (let-bytes (stream)
             ((last-metadata-change (:hex (:bytes 4)))
              (last-metadata-change-nano (:bytes 4))
              (last-data-change (:bytes 4))
              (last-data-change-nano (:bytes 4))
              (device (:hex (:bytes 4)))
              (inode (:hex (:bytes 4)))
              (mode (:hex (:bytes 4)))
              (user-id (:hex (:bytes 4)))
              (group-id (:hex (:bytes 4)))
              (file-size (:integer (:bytes 4)))
              (object-name (:hex (:bytes 20)))
              (flags (:bytes 2))
              (file-name (:string (:until-last-nul))))
             ;; (format t "[+] Device:      ~a~%" device)
             ;; (format t "[+] File size:   ~a~%" file-size)
             ;; (format t "[+] Object name: ~a~%" object-name)
             ;; (format t "[+] File name:   ~a~%" file-name)
             (cons file-size file-name)))
